name: SAST / DAST Workflow 

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Ensures full history for SonarCloud analysis

      # ✅ Use Java 8 for Compilation
      - name: Set up JDK 8 (For Building)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build with Maven (Using Java 8)
        run: | 
          mvn clean package -DskipTests
          java -jar target/*.jar &
        env: 
          SERVER_PORT: 8080

      # ✅ Switch to Java 17 for SonarCloud
      - name: Set up JDK 17 (For SonarCloud)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Force Maven to Rebuild Dependencies
        run: mvn clean install -U
# SAST phase    
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: c29d18edd7958bf4f9963ddcc29ab48e1be8e2ea
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=jd212org_stcproject \
            -Dsonar.organization=jd212org \
            -Dsonar.host.url=https://sonarcloud.io
            
# preparing the DAST phase :
      - name: Application start
        run: sleep 30

      - name : Run ZAP scan
        uses: zaproxy/action-full-scan@v0.4.0
        with:
          docker_name: "zaproxy/zap-weekly"
          target: 'http://localhost:8080'
          cmd_options: '-a'

      - name: Stop Application
        if: always()
        run: pkill -f 'java -jar'

        
